load(
    "@rules_scala_annex//rules:scala.bzl",
    "scala_library",
    "scala_test",
)

alias(
    name = "org_scalamacros_paradise",
    actual = ":plugin",
    visibility = ["//visibility:public"],
)

scala_library(
    name = "plugin",
    srcs = glob([
        "plugin/src/main/scala/**/*.scala",
    ]),
    resource_jars = [
        ":resources",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@scala_scala_compiler//jar",
        "@scala_scala_reflect//jar",
    ],
)

# a trick to slap the XML into the root of a new resource jar
java_binary(
    name = "resources",
    classpath_resources = [
        "plugin/src/main/scala/org/scalamacros/paradise/embedded/scalac-plugin.xml",
    ],
    create_executable = False,
)

scala_library(
    name = "test_src",
    srcs = glob([
        "tests/src/main/scala/**/*.scala",
    ]),
    macro = True,
    plugins = [
        "@org_scalamacros_paradise",
    ],
    deps = [
        "@scala_scala_compiler//jar",
        "@scala_scala_reflect//jar",
    ],
)

# these tests are slow, so just building them
scala_library(
    name = "test",
    #size = "large",
    srcs = glob(
        [
            "tests/src/test/scala/**/*.scala",
        ],
        exclude = [
            "tests/src/test/scala/annotations/neg/**/*.scala",
        ],
    ),
    plugins = [
        "@org_scalamacros_paradise",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":test_src",
        "@org_scalatest_scalatest",
    ],
)
