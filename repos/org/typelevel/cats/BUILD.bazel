load(
    "@rules_scala_annex//rules:scala.bzl",
    "scala_binary",
    "scala_library",
)
load(
    "@io_higherkindness_singularity//rules:scala_addendum.bzl",
    "make_srcjar",
)

_cats_deps = [
    "@com_github_mpilquist_simulacrum",
    "@org_typelevel_machinist",
]

_cats_scalacopts = [
    "-encoding",
    "UTF-8",
    "-feature",
    "-language:existentials",
    "-language:higherKinds",
    "-language:implicitConversions",
    "-language:experimental.macros",
    "-unchecked",
    "-Ywarn-dead-code",
    "-Ywarn-numeric-widen",
    "-Ywarn-value-discard",
    "-Xfuture",
    "-Yno-adapted-args",
    "-Xfatal-warnings",
    "-deprecation",
    "-Ypartial-unification",
]

_cats_plugins = [
    "@org_spire_math_kind_projector",
    "@org_scalamacros_paradise",
]

scala_library(
    name = "kernel",
    srcs = glob([
        "kernel/src/main/scala/**/*.scala",
        "kernel/src/main/scala-2.12-/**/*.scala",
    ]) + [
        ":kernel_boiler",
    ],
    macro = True,
    plugins = _cats_plugins,
    scalacopts = _cats_scalacopts,
    visibility = ["//visibility:public"],
    deps = _cats_deps,
)

scala_library(
    name = "core",
    srcs = glob([
        "core/src/main/scala/**/*.scala",
        "core/src/main/scala-2.12-/**/*.scala",
    ]) + [
        ":core_boiler",
    ],
    plugins = _cats_plugins,
    scalacopts = _cats_scalacopts,
    visibility = ["//visibility:public"],
    exports = [
        ":kernel",
    ],
    deps = _cats_deps + [
        ":kernel",
        ":macros",
    ],
)

scala_library(
    name = "macros",
    srcs = glob([
        "macros/src/main/scala/**/*.scala",
    ]),
    macro = True,
    plugins = _cats_plugins,
    scalacopts = _cats_scalacopts,
    visibility = ["//visibility:public"],
    deps = _cats_deps,
)

make_srcjar(
    name = "kernel_boiler",
    generator = ":kernel_boiler_bin",
)

make_srcjar(
    name = "core_boiler",
    generator = ":core_boiler_bin",
)

scala_binary(
    name = "kernel_boiler_bin",
    srcs = [
        "KittyKernelBoiler.scala",
        "project/KernelBoiler.scala",
        "sbt.scala",
    ],
)

scala_binary(
    name = "core_boiler_bin",
    srcs = [
        "KittyCoreBoiler.scala",
        "project/Boilerplate.scala",
        "sbt.scala",
    ],
)
